import{_ as e,c as t,o as s,a as n}from"./app.18d791a0.js";const F=JSON.parse('{"title":"<flux:form.container /> | flux | fluidtypo3","description":"","frontmatter":{"title":"<flux:form.container /> | flux | fluidtypo3"},"headers":[{"level":3,"title":"Attributes","slug":"attributes","link":"#attributes","children":[]},{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}],"relativePath":"extensions/fluidtypo3-flux/form-container.md","lastUpdated":1675356565000}'),a={name:"extensions/fluidtypo3-flux/form-container.md"},l=n(`<h1 id="flux-form-container" tabindex="-1">&lt;flux:form.container /&gt; <a class="header-anchor" href="#flux-form-container" aria-hidden="true">#</a></h1><p>Use around other Flux fields to make these fields nested visually and in variable scopes (i.e. a field called &quot;name&quot; inside a palette called &quot;person&quot; would end up with &quot;person&quot; being an array containing the &quot;name&quot; property, rendered as {<a href="http://person.name" target="_blank" rel="noreferrer">person.name</a>} in Fluid.</p><p>The field grouping can be hidden or completely removed. In this regard this element is a simpler version of the Section and Object logic.</p><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:center;">Required</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">Yes</td><td style="text-align:left;">Name of the attribute, FlexForm XML-valid tag name string</td></tr><tr><td style="text-align:left;">label</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named &quot;flux.fluxFormId.fields.foobar&quot; based on field name, in scope of extension rendering the Flux form. If field is in an object, use &quot;flux.fluxFormId.objects.objectname.foobar&quot; where &quot;foobar&quot; is the name of the field</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:center;">array</td><td style="text-align:center;"><code>[]</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context</td></tr></tbody></table><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h3><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">flux</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">form.container</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">settings.name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">flux</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">field.input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">firstname</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">First name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">flux</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">field.input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lastname</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Last name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">flux</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">form.container</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Name: {settings.name.firstname} {settings.name.lastname}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,8),o=[l];function r(p,i,c,d,u,y){return s(),t("div",null,o)}const D=e(a,[["render",r]]);export{F as __pageData,D as default};
