import{_ as t,c as e,o as l,a as n}from"./app.18d791a0.js";const u=JSON.parse('{"title":"<flux:form.sheet /> | flux | fluidtypo3","description":"","frontmatter":{"title":"<flux:form.sheet /> | flux | fluidtypo3"},"headers":[{"level":3,"title":"Attributes","slug":"attributes","link":"#attributes","children":[]}],"relativePath":"extensions/fluidtypo3-flux/form-sheet.md","lastUpdated":1675356565000}'),r={name:"extensions/fluidtypo3-flux/form-sheet.md"},s=n('<h1 id="flux-form-sheet" tabindex="-1">&lt;flux:form.sheet /&gt; <a class="header-anchor" href="#flux-form-sheet" aria-hidden="true">#</a></h1><p>Groups FlexForm fields into sheets.</p><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:center;">Required</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">Yes</td><td style="text-align:left;">Name of the group, used as FlexForm sheet name, must be FlexForm XML-valid tag name string</td></tr><tr><td style="text-align:left;">label</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Label for the field group - used as tab name in FlexForm. Optional - if not specified, Flux tries to detect an LLL label named &quot;flux.fluxFormId.sheets.foobar&quot; based on sheet name, in scope of extension rendering the Flux form</td></tr><tr><td style="text-align:left;">variables</td><td style="text-align:center;">array</td><td style="text-align:center;"><code>[]</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template</td></tr><tr><td style="text-align:left;">description</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Optional string or LLL reference with a desription of the purpose of the sheet</td></tr><tr><td style="text-align:left;">shortDescription</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">Optional shorter version of description of purpose of the sheet, LLL reference supported</td></tr><tr><td style="text-align:left;">extensionName</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">No</td><td style="text-align:left;">If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context</td></tr></tbody></table>',4),d=[s];function a(i,o,c,f,h,x){return l(),e("div",null,d)}const y=t(r,[["render",a]]);export{u as __pageData,y as default};
